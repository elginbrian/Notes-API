basePath: /
definitions:
  models.AuthResponse:
    properties:
      token:
        type: string
      user:
        $ref: '#/definitions/models.User'
    type: object
  models.LoginRequest:
    properties:
      email:
        type: string
      password:
        minLength: 6
        type: string
    required:
    - email
    - password
    type: object
  models.Note:
    properties:
      content:
        type: string
      created_at:
        type: string
      id:
        type: string
      image_path:
        type: string
      image_url:
        type: string
      title:
        type: string
      updated_at:
        type: string
      user:
        $ref: '#/definitions/models.User'
      user_id:
        type: string
    type: object
  models.RegisterRequest:
    properties:
      email:
        type: string
      name:
        minLength: 2
        type: string
      password:
        minLength: 6
        type: string
    required:
    - email
    - name
    - password
    type: object
  models.User:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: string
      name:
        type: string
      notes:
        items:
          $ref: '#/definitions/models.Note'
        type: array
      updated_at:
        type: string
    type: object
host: localhost:3000
info:
  contact:
    email: support@notesapi.com
    name: API Support
  description: A comprehensive Notes API built with Go Fiber, featuring JWT authentication,
    CRUD operations, and image uploads
  title: Notes API
  version: "1.0"
paths:
  /api/auth/login:
    post:
      consumes:
      - application/json
      description: Authenticate user with email and password, returns JWT token
      parameters:
      - description: User login credentials
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Login successful
          schema:
            $ref: '#/definitions/models.AuthResponse'
        "400":
          description: Invalid request body
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Invalid credentials
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: User login
      tags:
      - Authentication
  /api/auth/register:
    post:
      consumes:
      - application/json
      description: Create a new user account with name, email, and password
      parameters:
      - description: User registration data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: User registered successfully
          schema:
            $ref: '#/definitions/models.AuthResponse'
        "400":
          description: Invalid request body
          schema:
            additionalProperties:
              type: string
            type: object
        "409":
          description: User already exists
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Register a new user
      tags:
      - Authentication
  /api/notes:
    get:
      consumes:
      - application/json
      description: Retrieve all notes belonging to the authenticated user with image
        URLs
      produces:
      - application/json
      responses:
        "200":
          description: List of notes
          schema:
            additionalProperties:
              items:
                $ref: '#/definitions/models.Note'
              type: array
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get all notes for authenticated user
      tags:
      - Notes
    post:
      consumes:
      - multipart/form-data
      description: Create a new note with optional image upload using multipart form
        data
      parameters:
      - description: Note title
        in: formData
        name: title
        required: true
        type: string
      - description: Note content
        in: formData
        name: content
        type: string
      - description: Image file (JPEG, PNG, GIF)
        in: formData
        name: image
        type: file
      produces:
      - application/json
      responses:
        "201":
          description: Note created successfully
          schema:
            $ref: '#/definitions/models.Note'
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Create a new note
      tags:
      - Notes
  /api/notes/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a note and its associated image file
      parameters:
      - description: Note ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Note deleted successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Note not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Delete a note
      tags:
      - Notes
    get:
      consumes:
      - application/json
      description: Retrieve a specific note by ID for the authenticated user
      parameters:
      - description: Note ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Note details
          schema:
            $ref: '#/definitions/models.Note'
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Note not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get a specific note
      tags:
      - Notes
    put:
      consumes:
      - multipart/form-data
      description: Update a note's title, content, and/or image using multipart form
        data
      parameters:
      - description: Note ID
        in: path
        name: id
        required: true
        type: string
      - description: Note title
        in: formData
        name: title
        type: string
      - description: Note content
        in: formData
        name: content
        type: string
      - description: Image file (JPEG, PNG, GIF)
        in: formData
        name: image
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: Note updated successfully
          schema:
            $ref: '#/definitions/models.Note'
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Note not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Update an existing note
      tags:
      - Notes
schemes:
- http
- https
securityDefinitions:
  BearerAuth:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
